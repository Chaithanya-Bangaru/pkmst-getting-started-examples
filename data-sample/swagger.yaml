swagger: '2.0'
info:
  description: >-
    This is a sample Car application.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: Swagger Car
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: car
    description: Operations about car
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /car:
    post:
      tags:
        - car
      summary: Create Car
      description: Any user can do
      operationId: createCar
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created car object
          required: true
          schema:
            $ref: '#/definitions/Car'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        default:
          description: successful operation
  /car/allCarrs:
    post:
      tags:
        - car
      summary: Displays all existing cars information
      description: Any user can do
      operationId: allCars
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Car'
        default:
          description: successful operation
  /car/createWithArray:
    post:
      tags:
        - car
      summary: Creates list of cars with given input array
      description: ''
      operationId: createCarsWithArrayInput
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of car object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Car'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        default:
          description: successful operation
  '/car/{vinNumber}':
    get:
      tags:
        - car
      summary: Get car by vin number
      description: ''
      operationId: getCarByVinNumber
      produces:
        - application/json
      parameters:
        - name: vinNumber
          in: path
          description: 'The vin number that needs to be fetched. Use v101 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Car'
        '400':
          description: Invalid vinNumber supplied
        '404':
          description: Car not found
    put:
      tags:
        - car
      summary: Updated Car
      description: Any user can update car details.
      operationId: updateCar
      produces:
        - application/json
      parameters:
        - name: vinNumber
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated car object
          required: true
          schema:
            $ref: '#/definitions/Car'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - car
      summary: Delete Car
      description: Any user can delete existing car information.
      operationId: deleteCar
      produces:
        - application/json
      parameters:
        - name: vinNumber
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
definitions:
  Car:
    type: object
    properties:
      id:
        type: integer
        format: int64
      vinNumber:
        type: string
      make:
        type: string
      model:
        type: string
      year:
        type: integer
        format: int32
    xml:
      name: Car
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
