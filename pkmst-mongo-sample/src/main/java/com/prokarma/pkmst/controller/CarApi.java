/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.Car;
import java.util.List;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.PkmstServerCodegen", date = "2017-10-26T02:45:52.152Z")

@Api(value = "car", description = "the car API")
public interface CarApi {
	
	@ApiOperation(value = "Creates list of cars with given input array", notes = "", response = Car.class, responseContainer = "List", tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Car.class, responseContainer = "List") })
    @RequestMapping(value = "/car/allCars",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Car>> allCars( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

    @ApiOperation(value = "Create Car", notes = "", response = Void.class, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/car",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> createCar(@ApiParam(value = "Created car object" ,required=true )   @RequestBody Car body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Creates list of cars with given input array", notes = "", response = Void.class, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/car/createWithArray",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> createCarsWithArrayInput(@ApiParam(value = "List of car object" ,required=true )   @RequestBody List<Car> body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Delete car", notes = "", response = Void.class, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid vinNumber supplied"),
        @ApiResponse(code = 404, message = "Car not found") })
    @RequestMapping(value = "/car/{vinNumber}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteCar(@ApiParam(value = "The car vinNumber that needs to be deleted",required=true ) @PathVariable("vinNumber") String vinNumber, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get car by vin number", notes = "", response = Car.class, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Car.class),
        @ApiResponse(code = 400, message = "Invalid vinNumber supplied"),
        @ApiResponse(code = 404, message = "Car not found") })
    @RequestMapping(value = "/car/{vinNumber}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Car> getCarByVinNumber(@ApiParam(value = "The vinNumber that needs to be fetched. Use v101 for testing. ",required=true ) @PathVariable("vinNumber") String vinNumber, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Updated car", notes = "", response = Void.class, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid vinNumber supplied"),
        @ApiResponse(code = 404, message = "Car not found") })
    @RequestMapping(value = "/car/{vinNumber}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateCar(@ApiParam(value = "vinNumber that need to be updated",required=true ) @PathVariable("vinNumber") String vinNumber,@ApiParam(value = "Updated car object" ,required=true )   @RequestBody Car body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
