/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import java.util.List;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.prokarma.pkmst.model.Student;

/**
 * Provides the info about api methods
 * 
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.PkmstServerCodegen", date = "2017-10-13T15:19:53.170Z")
@Api(value = "student", description = "the Student API")
public interface StudentApi {

	@ApiOperation(value = "Get Student info", notes = "Retrvies student information.", response = Student.class, tags = { "student", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "successful operation") })
	@RequestMapping(method = RequestMethod.GET, value = "/students/{id}")
	public ResponseEntity<Student> studentInfo(
			@ApiParam(value = "Get Student information", required = true) @PathVariable Long id,
			@RequestHeader(value = "Accept", required = false) String accept)
			throws Exception;
	
	
	@ApiOperation(value = "Create Student", notes = "Create student information", response = String.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/students",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
	ResponseEntity<String> createStudent(@ApiParam(value = "Created Student object" ,required=true )   @RequestBody Student body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;
	
	
	@ApiOperation(value = "Update Student", notes = "Update student information", response = String.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/students",
        consumes = { "application/json" }, 
        method = RequestMethod.PUT)
	ResponseEntity<String> updateStudent(@ApiParam(value = "Update Student object" ,required=true )   @RequestBody Student body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;
	
	
	@ApiOperation(value = "All Students Info", notes = "Shows all Students information", response = List.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/students",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
	ResponseEntity<List<Student>> allStudents() throws Exception;
	
	@ApiOperation(value = "Delete Student info", notes = "Deletes student information.", response = Student.class, tags = { "student", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "successful operation") })
	@RequestMapping(method = RequestMethod.DELETE, value = "/students/{id}")
	public ResponseEntity<String> deleteStudent(
			@ApiParam(value = "Deleted Student information", required = true) @PathVariable Long id,
			@RequestHeader(value = "Accept", required = false) String accept)
			throws Exception;

}
