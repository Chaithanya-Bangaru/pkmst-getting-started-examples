/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import java.util.List;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.prokarma.pkmst.model.Customer;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.PkmstServerCodegen", date = "2017-10-13T15:19:53.170Z")

@Api(value = "customer", description = "the customer API")
public interface CustomerApi {

    @ApiOperation(value = "Find Customer by ID", notes = "Returns a single Customer", response = Customer.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Customer.class)
         })
    @RequestMapping(value = "/customer/{customerId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Customer> getCustomerById(@ApiParam(value = "ID of Customer to return",required=true ) @PathVariable("customerId") Long customerId) throws Exception;
    
    @ApiOperation(value = "Find Customer by ID", notes = "Returns a single Customer", response = Customer.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Customer.class)
         })
    @RequestMapping(value = "/findCustomer/{customerLoc}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Customer>> getCustomerByLoc(@ApiParam(value = "Location of Customers to return",required=true ) @PathVariable("customerLoc") String customerLoc) throws Exception;


    
}
